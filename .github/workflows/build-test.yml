name: Build & Test

on:
  push:
    branches: [ master, artifact-test ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup submodule
      run: |
        git submodule update --init --recursive
    - name: Pull engine updates
      uses: space-wizards/submodule-dependency@v0.1.5
    - name: Update Engine Submodules
      run: |
        cd RobustToolbox/
        git submodule update --init --recursive
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.101
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore /m
    - name: Content.Tests
      shell: pwsh
      run: |
        $env:COMPlus_gcServer=1
        dotnet test --no-build Content.Tests/Content.Tests.csproj -v n
    - name: Content.IntegrationTests
      shell: pwsh
      run: |
        $env:COMPlus_gcServer=1
        dotnet test --no-build Content.IntegrationTests/Content.IntegrationTests.csproj -v n
    - name: Publish DMCompiler
      run: dotnet publish DMCompiler -c Release -o output/DMCompiler
    - name: Publish OpenDreamServer
      run: dotnet publish OpenDreamServer -c Release -o output/OpenDreamServer
    - name: Delete Old Artifacts
      uses: actions/github-script@v6
      id: artifact
      with:
        script: |
          const res = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })

          res.data.artifacts
            .forEach(({ id }) => {
              github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: id,
              })
            })
    - name: Upload DMCompiler
      uses: actions/upload-artifact@v3
      with:
        name: dmcompiler
        path: output/DMCompiler
    - name: Upload OpenDreamServer
      uses: actions/upload-artifact@v3
      with:
        name: opendreamserver
        path: output/OpenDreamServer
